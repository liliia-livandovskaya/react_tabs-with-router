{"version":3,"sources":["Components/TabsPage.tsx","App.tsx","index.tsx"],"names":["TabsPage","tabs","tabId","useParams","neededTab","find","tab","id","isTabValid","undefined","className","map","to","title","content","App","isActive","path","element","ReactDOM","render","document","getElementById"],"mappings":"oNA4CeA,EAhCkB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC1BC,EAAUC,cAAVD,MACFE,EAAYH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,KACxCM,OAA2BC,IAAdL,EAEnB,OACE,sBAAKM,UAAU,UAAf,UACE,qBAAKA,UAAU,gBAAf,SACE,6BACGT,EAAKU,KAAI,SAAAL,GAAG,OACX,6BACE,cAAC,IAAD,CACEM,GAAE,gBAAWN,EAAIC,IACjBG,UAAW,kBACTJ,EAAIC,KAAOL,EAAS,YAAgB,cAHxC,SAMGI,EAAIO,SAPAP,EAAIC,WAcnB,qBAAKG,UAAU,QAAQ,UAAQ,cAA/B,SACGF,EAAcJ,EAAUU,QACpB,6BClCPb,EAAO,CACX,CAAEM,GAAI,QAASM,MAAO,QAASC,QAAS,eACxC,CAAEP,GAAI,QAASM,MAAO,QAASC,QAAS,eACxC,CAAEP,GAAI,QAASM,MAAO,QAASC,QAAS,gBAiD3BC,EA9CH,WACV,OACE,sBAAKL,UAAU,MAAf,UACE,qBAAKA,UAAU,gBAAf,SACE,sBAAKA,UAAU,MAAf,UACE,cAAC,IAAD,CACEA,UAAW,qBAAGM,SACV,YAAc,cAClBJ,GAAG,IAHL,uBAQA,cAAC,IAAD,CACEF,UAAW,qBAAGM,SACV,YAAc,cAClBJ,GAAG,QAHL,8BASJ,eAAC,IAAD,WACE,cAAC,IAAD,CACEK,KAAK,IACLC,QACE,oBAAIR,UAAU,uBAAd,yBAKJ,cAAC,IAAD,CAAOO,KAAK,QAAQC,QAAS,4CAC7B,cAAC,IAAD,CAAOD,KAAK,cAAcC,QAAS,cAAC,EAAD,CAAUjB,KAAMA,MACnD,cAAC,IAAD,CAAOgB,KAAK,QAAQC,QAAS,cAAC,EAAD,CAAUjB,KAAMA,MAE7C,cAAC,IAAD,CACEgB,KAAK,IACLC,QACE,mDC5CZC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7a8d4a62.chunk.js","sourcesContent":["import { NavLink, useParams } from 'react-router-dom';\n\ninterface Tabs {\n  id: string,\n  title: string,\n  content: string\n}\n\ninterface Props {\n  tabs: Tabs[];\n}\n\nconst TabsPage:React.FC<Props> = ({ tabs }) => {\n  const { tabId } = useParams<{ tabId: string }>();\n  const neededTab = tabs.find(tab => tab.id === tabId);\n  const isTabValid = neededTab !== undefined;\n\n  return (\n    <div className=\"section\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li key={tab.id}>\n              <NavLink\n                to={`/tabs/${tab.id}`}\n                className={() => (\n                  tab.id === tabId ? ('is-active') : ('not-active')\n                )}\n              >\n                {tab.title}\n              </NavLink>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"tab-content\">\n        {isTabValid ? (neededTab.content)\n          : ('Please, select a tab')}\n      </div>\n    </div>\n  );\n};\n\nexport default TabsPage;\n","import { Routes, Route, NavLink } from 'react-router-dom';\nimport './App.scss';\nimport TabsPage from './Components/TabsPage';\n\nconst tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <div className=\"tabs is-boxed\">\n        <nav className=\"nav\">\n          <NavLink\n            className={({ isActive }) => (isActive\n              ? 'is-active' : 'not-active')}\n            to=\"/\"\n          >\n            Home page\n          </NavLink>\n\n          <NavLink\n            className={({ isActive }) => (isActive\n              ? 'is-active' : 'not-active')}\n            to=\"/tabs\"\n          >\n            People page\n          </NavLink>\n        </nav>\n      </div>\n      <Routes>\n        <Route\n          path=\"/\"\n          element={(\n            <h1 className=\"title is-1 is-spaced\">\n              Home page\n            </h1>\n          )}\n        />\n        <Route path=\"/home\" element={<p>Home page</p>} />\n        <Route path=\"tabs/:tabId\" element={<TabsPage tabs={tabs} />} />\n        <Route path=\"/tabs\" element={<TabsPage tabs={tabs} />} />\n\n        <Route\n          path=\"*\"\n          element={\n            <p>Home page</p>\n          }\n        />\n      </Routes>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}